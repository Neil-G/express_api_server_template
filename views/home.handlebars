{{> top_nav}}
{{> modal}}

<script>
    // handle navigation from logout
    const urlParams = new URLSearchParams(window.location.search)
    const shouldRemoveToken = urlParams.get('logout')
    var authTokenKey = "{{authTokenKey}}"
    if (shouldRemoveToken) {
        localStorage.removeItem(authTokenKey)
        window.history.replaceState({}, document.title, '/')
    }

    // check for valid token
    var token = localStorage.getItem(authTokenKey)
    if (!!token) {
        axios({
            method: 'post',
                url: "{{loginWithTokenRoute}}",
                headers: {
                    [authTokenKey]: token
                }
        }).then(res => {
            if (!!res.data[authTokenKey]) {
                var authNavItem = document.getElementById('auth-top-nav-item')
                var dashboardLinkNavItem = document.getElementById('dashboard-link-top-nav-item')
                authNavItem.hidden = true
                dashboardLinkNavItem.hidden = false
                var appLink = document.getElementById('app-link')
                appLink.setAttribute('href', "{{appUrl}}" + '?'  + authTokenKey + '=' + token)
            }
        })
        
    }

    // open and close login and registration modals
    function openAuthModal (authAction) {
        const authModal = document.getElementById('auth-modal')
        const registrationForm = document.getElementById('registrationForm')
        const loginForm = document.getElementById('loginForm')
        var authModalHeader = document.getElementById('auth-modal-header')
        if (authAction === 'register') {
            registrationForm.hidden = false
            loginForm.hidden = true
            authModalHeader.innerHTML = 'Sign up'
        }
        if (authAction === 'login') {
            registrationForm.hidden = true
            loginForm.hidden = false
            authModalHeader.innerHTML = 'Log in'

        }
        authModal.hidden = false
    }

    function closeAuthModal () {
        const authModal = document.getElementById('auth-modal')
        authModal.hidden = true
    }

    const authModal = document.getElementById('auth-modal')
    authModal.addEventListener('click', function(event) {
        if (event.target.id === 'auth-modal-background') closeAuthModal()
    })

</script>

<script>
    function getUrlParam (key) {
        var urlParams = new URLSearchParams(window.location.search)
        var paramValue = urlParams.get(key)
        return paramValue
    }

    // GITHUB LOGIN LOGIC
    var authToken = getUrlParam("{{authTokenKey}}")
    if (authToken) {
        // add token to local storage
        localStorage.setItem(authTokenKey, authToken)
        // redirect to application
        setTimeout(function() {
            return window.location.href = "{{appUrl}}" + '?'  + authTokenKey + '=' + authToken
        }, 450)
    }
</script>


<button>Login with LinkedIn</button>
<a href="https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=779y7imgok34es&redirect_uri=http%3A%2F%2Flocalhost%3A5678%2Fapi%2Fsocial-auth%2Flinkedin_auth_redirect&state=fooobar&scope=r_liteprofile%20r_emailaddress%20w_member_social">Login with Linked</a>