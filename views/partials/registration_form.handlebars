<form id="registrationForm">
    <div class="auth-form">
        <h2>Register</h2>
        <label>Email</label>
        <input id="emailInput" type="email" placeholder="email">
        <input id="emailVerifyInput" type="email" placeholder="verify email">
        <label>Password</label>
        <input id="passwordInput" type="password" placeholder="password">
        <input id="passwordVerifyInput" type="password" placeholder="verify password">
        <button type="submit">Submit</button>
    </div>
</form>

<script>
    // attach onsubmit to form
    var registrationForm = document.getElementById("registrationForm")
    registrationForm.addEventListener('submit', submitRegistrationForm)

    // submit form method
    function submitRegistrationForm(e) {
        e.preventDefault()
        // get form and values
        var email = document.getElementById("emailInput").value
        var emailVerify = document.getElementById("emailVerifyInput").value
        var password = document.getElementById("passwordInput").value
        var passwordVerify = document.getElementById("passwordVerifyInput").value
        
        // validation

        // make sure all fields are filled out
        if (!email.trim()) return alert ('please enter an email')
        if (!emailVerify.trim()) return alert ('please enter the email verification')
        if (!password.trim()) return alert ('please enter a password')
        if (!passwordVerify.trim()) return alert ('please enter the password verification')

        // verify that fields match with verification fields
        if (email.trim() !== emailVerify.trim()) return alert('emails do not match')
        if (password.trim() !== passwordVerify.trim()) return alert('passwords do not match')

        // validate that password passes password rules

        // submit data to server
        axios({
            method: 'post',
            url: '/api/auth/register-and-login',
            data: {
                emailAddress: email,
                password: password
            }
        // handle server response
        }).then(res => {
            // handle errors

            // handle db duplicate errors
            if (!!res.data.errmsg && res.data.errmsg.includes('duplicate key error')) {
                if (res.data.errmsg.includes('emailAddress')) {
                    return alert(email + ' is already registered. Please login.')
                }
            }

            // add token to local storage
            localStorage.setItem('token', res.data.token)

            // redirect to application
            setTimeout(function() {
                return window.location.href = "{{appUrl}}" + '?token=' + res.data.token
            }, 450)

        })
    }
</script>